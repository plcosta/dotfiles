#!/bin/zsh

ZDOTDIR=$HOME/.dotfiles/shell
HOMESTEAD="$HOME/.homestead"
CODE="$HOME/Code"

# ----------------------------------------------------------------------
# | Update                                                         |
# ----------------------------------------------------------------------
alias f5="source ~/.zshrc"

# ----------------------------------------------------------------------
# | Navigation                                                         |
# ----------------------------------------------------------------------

alias ~="cd ~"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias cd..="cd .."
alias codedir="cd $HOME/Code"

# ----------------------------------------------------------------------
# | Git                                                                |
# ----------------------------------------------------------------------

alias gba="git branch -a"
alias gcm="git checkout master"
alias glpp="git log --pretty=oneline"
alias gs="git status"
alias gd="git diff"
alias gp="git pull"
alias gci="git commit --interactive"
alias ga="git add"
alias gmt="git mergetool"
alias gpom="git push origin master"
alias gpsm="git push staging master"
alias gppm="git push production master"
alias gr="git rebase -i HEAD~10"
alias gc="git commit -m "
alias gri="git add --all && git commit -m 'WIP' && git rebase -i HEAD~10"
alias rebase_master="git checkout master && git pull origin master && git checkout - && git rebase master"
alias rebase_staging="git checkout staging && git pull origin staging && git checkout - && git rebase staging"
alias merge_master="git checkout master && git pull --rebase && git checkout - && git rebase master && git checkout master && git merge -"
alias delete_merged="git branch --merged | grep -v '^* master$' | grep -v '^  master$' | grep -v '^* staging$' | grep -v '^  staging$' | xargs git branch -d"
alias clean_branches="git checkout master && git pull origin master &&  git checkout staging && git pull origin staging && git remote update --prune && delete_merged"

# ----------------------------------------------------------------------
# | Rails                                                              |
# ----------------------------------------------------------------------

alias rc="bin/rails c"
alias rs="bin/rails s"
alias routes="bin/rake routes"
alias gib="gem install bundler"
alias gibp="gem install bundler --pre"
alias bi="bundle install"
alias bu="bundle update"
alias bx="bundle exec"
alias bs="bundle exec rspec"
alias bir="bundle install --relock"
alias brake="bin/rake"
alias brails="bin/rails"
alias migrate="bin/rake db:migrate"
alias rspec="bundle exec rspec"
alias thin="bundle exec thin"
alias remakedb="bin/rake db:drop db:create db:migrate && bin/rake db:seed"
alias remaketest="bin/rake db:drop db:create db:migrate RAILS_ENV=test"
alias remakedbs="bin/rake db:drop db:create db:migrate && bin/rake db:seed && bin/rake db:drop db:create db:migrate RAILS_ENV=test"

# ----------------------------------------------------------------------
# | Heroku                                                             |
# ----------------------------------------------------------------------

alias prod_logs="heroku logs -t --remote production"
alias stag_logs="heroku logs -t --remote staging"
alias migrate_stag="heroku run rake db:migrate --remote staging"
alias migrate_prod="heroku run rake db:migrate --remote production"
alias reset_stag_db="heroku pg:reset --remote staging DATABASE && heroku run rake db:migrate --remote staging && heroku run rake db:seed --remote staging && heroku restart --remote staging"
alias reset_prod_db="heroku pg:reset --remote production DATABASE && heroku run rake db:migrate --remote production && heroku run rake db:seed --remote production && heroku restart --remote production"

# ----------------------------------------------------------------------
# | Network                                                            |
# ----------------------------------------------------------------------

alias ip="dig +short myip.opendns.com @resolver1.opendns.com"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

alias local-ip="ipconfig getifaddr en1"

# ----------------------------------------------------------------------# | Postgresql with Brew
# ----------------------------------------------------------------------

alias pgstart="brew services start postgresql"
alias pgstop="brew services stop postgresql"

# ----------------------------------------------------------------------
# | Package Managers                                                   |
# ----------------------------------------------------------------------

# npm
# https://docs.npmjs.com/

if [ -x "$(command -v npm)" ]; then
    alias npmi="npm install"
    alias npmr="npm uninstall"
    alias npms="npm search"
    alias npmu="npm update"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# OS specific package managers


# Homebrew
# http://brew.sh/

if [ -x "$(command -v brew)" ]; then
    alias brewd="brew doctor"
    alias brewi="brew install"
    alias brewr="brew uninstall"
    alias brews="brew search"
    alias brewu="brew update &&  \
                 brew upgrade && \
                 brew cleanup"
fi


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Update


alias update="sudo softwareupdate --install --all && \
              brewu && \
              npmi -g npm && \
              npmu -g"


# ----------------------------------------------------------------------
# | Shorter Commands                                                   |
# ----------------------------------------------------------------------

alias :q="exit"
alias c="clear"
alias ch="history -c && > ~/.bash_history"
alias e="vim"
alias g="git"
alias ll="ls -l"
alias m="man"
alias map="xargs -n1"
alias q="exit"
alias rm="rm -rf"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Copy to clipboard

alias cc="pbcopy"


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Empty Trash

#alias empty-trash="sudo rm -frv /Volumes/*/.Trashes && \
alias empty-trash="sudo rm -frv ~/.Trash && \
                  sudo rm -frv /private/var/log/asl/*.asl"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


# Hide/Show desktop icons
alias hide-desktop-icons="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias show-desktop-icons="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Hide/Show hidden files in Finder
alias hide-hidden-files="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"
alias show-hidden-files="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Lock screen

alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Open

alias o="open"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

alias use-node="brew unlink iojs && brew link --force node"
alias use-iojs="brew unlink node && brew link --force iojs"


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Open sublime and SourceTree

alias code="atom . && stree && open -a ~/Applications/Google\ Chrome.app 'http://localhost:3000' && rs"


# ----------------------------------------------------------------------
# | Tunneling / External tools                                         |
# ----------------------------------------------------------------------
function tunnel() {
  "/usr/local/bin/lt --port $1"
}


# ----------------------------------------------------------------------
# | Laravel Homestead                                         |
# ----------------------------------------------------------------------

homestead () {

    if [[ $1 == "up" ]]; then
        cd $HOMESTEAD
        vagrant up
    elif [[ $1 == "suspend" ]]; then
        cd $HOMESTEAD
        vagrant suspend
    elif [[ $1 == "ssh" ]]; then
        cd $HOMESTEAD
        vagrant ssh
    elif [[ $1 == "halt" ]]; then
        cd $HOMESTEAD
        vagrant halt
    else
        return 1
    fi

}

# ----------------------------------------------------------------------
# | Hospub                                          |
# ----------------------------------------------------------------------

hospub () {

    if [[ $1 == "up" ]]; then
        cd $CODE
        vagrant up hospub
    elif [[ $1 == "suspend" ]]; then
        cd $CODE
        vagrant suspend hospub
    elif [[ $1 == "ssh" ]]; then
        cd $CODE
        vagrant ssh hospub
    elif [[ $1 == "halt" ]]; then
        cd $CODE
        vagrant halt hospub
    else
        return 1
    fi

}
